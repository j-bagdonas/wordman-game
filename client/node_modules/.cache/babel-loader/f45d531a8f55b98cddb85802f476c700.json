{"ast":null,"code":"var _jsxFileName = \"/Users/johnbagdonas/Development/WordMan/client/src/components/WordMan3d.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WordMan3d(props) {\n  _s();\n\n  // This reference will give us direct access to the mesh\n  const mesh = useRef(); // Set up state for the hovered and active state\n\n  const [hovered, setHover] = useState(false);\n  const [active, setActive] = useState(false); // Subscribe this component to the render-loop, rotate the mesh every frame\n  // useFrame((state, delta) => (mesh.current.rotation.x += 0.01))\n  // Return view, these are regular three.js elements expressed in JSX\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    scale: active ? 1.5 : 1,\n    onClick: event => setActive(!active),\n    onPointerOver: event => setHover(true),\n    onPointerOut: event => setHover(false),\n    children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      args: [4, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: hovered ? 'hotpink' : 'orange'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WordMan3d, \"v0EuvcREQIe0Cs/KpFD8GfN5Pcw=\");\n\n_c = WordMan3d;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordMan3d\");","map":{"version":3,"sources":["/Users/johnbagdonas/Development/WordMan/client/src/components/WordMan3d.js"],"names":["useRef","useState","useFrame","WordMan3d","props","mesh","hovered","setHover","active","setActive","event"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACvC;AACA,QAAMC,IAAI,GAAGL,MAAM,EAAnB,CAFuC,CAGvC;;AACA,QAAM,CAACM,OAAD,EAAUC,QAAV,IAAsBN,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC,CALuC,CAMvC;AACA;AACA;;AACA,sBACE,qBACMG,KADN;AAEE,IAAA,GAAG,EAAEC,IAFP;AAGE,IAAA,KAAK,EAAEG,MAAM,GAAG,GAAH,GAAS,CAHxB;AAIE,IAAA,OAAO,EAAGE,KAAD,IAAWD,SAAS,CAAC,CAACD,MAAF,CAJ/B;AAKE,IAAA,aAAa,EAAGE,KAAD,IAAWH,QAAQ,CAAC,IAAD,CALpC;AAME,IAAA,YAAY,EAAGG,KAAD,IAAWH,QAAQ,CAAC,KAAD,CANnC;AAAA,4BAOE;AAAa,MAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAAnB;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAsB,MAAA,KAAK,EAAED,OAAO,GAAG,SAAH,GAAe;AAAnD;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GArBuBH,S;;KAAAA,S","sourcesContent":["import { useRef, useState } from 'react'\nimport { useFrame } from '@react-three/fiber'\n\nexport default function WordMan3d(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef()\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false)\n  const [active, setActive] = useState(false)\n  // Subscribe this component to the render-loop, rotate the mesh every frame\n  // useFrame((state, delta) => (mesh.current.rotation.x += 0.01))\n  // Return view, these are regular three.js elements expressed in JSX\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={active ? 1.5 : 1}\n      onClick={(event) => setActive(!active)}\n      onPointerOver={(event) => setHover(true)}\n      onPointerOut={(event) => setHover(false)}>\n      <boxGeometry args={[4, 1, 1]} />\n      <meshStandardMaterial color={hovered ? 'hotpink' : 'orange'} />\n    </mesh>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}