{"ast":null,"code":"var _jsxFileName = \"/Users/johnbagdonas/Development/WordMan/client/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport './Board.css';\nimport { useEffect, useState } from \"react\";\nimport Key from \"./Key.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst row1 = \"qwertyuiop\";\nconst row2 = 'asdfghjkl';\nconst row3 = 'zxcvbnm';\nexport default function Board(_ref) {\n  _s();\n\n  let {\n    word,\n    fetchWord,\n    score,\n    setScore,\n    gameOver,\n    setResetTimer,\n    wrongGuesses,\n    setWrongGuesses\n  } = _ref;\n  const [correctGuesses, setCorrectGuesses] = useState([]);\n  const [letterList, setletterList] = useState([]);\n  const [clearKeys, setClearKeys] = useState(false);\n  const [scoreDisplay, setScoreDisplay] = useState(\"none\");\n  const [previousWord, setPreviousWord] = useState(\"\");\n\n  const addScore = word => {\n    setPreviousWord(word);\n    setScoreDisplay(\"block\");\n    setScore(score + (Math.abs(word.length - 5) * 100 + 500));\n    setResetTimer(true); // setTimeout(() => {\t\n    // \tsetScoreDisplay(\"none\")\n    // \tsetCorrectGuesses([])\n    // \tsetWrongGuesses(0)\n    // \tsetletterList([])  \n    // \tfetchWord()\n    // }, 1)\n\n    setScoreDisplay(\"none\");\n    setCorrectGuesses([]);\n    setWrongGuesses(0);\n    setletterList([]);\n    fetchWord();\n  };\n\n  useEffect(() => {\n    let tempList = [];\n    [...word].forEach((char, key) => {\n      tempList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"letterDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"letter\",\n          children: correctGuesses.includes(char) && char\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"underline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this));\n    });\n    setletterList(tempList);\n    const charSet = new Set(word).size;\n\n    if (charSet === correctGuesses.length && charSet > 0) {\n      addScore(word);\n      setClearKeys(true);\n    } else {\n      setClearKeys(false);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [correctGuesses, word]);\n  useEffect(() => {\n    setCorrectGuesses([]);\n    setWrongGuesses(0);\n    setletterList([]);\n  }, [gameOver, setWrongGuesses]);\n  var keyRow1 = [];\n  var keyRow2 = [];\n  var keyRow3 = [];\n\n  const makeKeyBoardRow = (row, keyRow) => {\n    [...row].forEach(char => {\n      keyRow.push( /*#__PURE__*/_jsxDEV(Key, {\n        word: word,\n        correctGuesses: correctGuesses,\n        setCorrectGuesses: setCorrectGuesses,\n        wrongGuesses: wrongGuesses,\n        setWrongGuesses: setWrongGuesses,\n        clearKeys: clearKeys,\n        gameOver: gameOver,\n        char: char\n      }, char, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this));\n    });\n  };\n\n  makeKeyBoardRow(row1, keyRow1);\n  makeKeyBoardRow(row2, keyRow2);\n  makeKeyBoardRow(row3, keyRow3);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word\",\n        children: letterList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keyRow\",\n        children: keyRow1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keyRow\",\n        children: keyRow2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keyRow\",\n        children: keyRow3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scoreAlert\",\n      style: {\n        display: scoreDisplay\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [previousWord, \" + \", Math.abs(previousWord.length - 5) * 100 + 500]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Board, \"ip9p2MhkuoW050XQ5JLo0pX2nys=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/johnbagdonas/Development/WordMan/client/src/components/Board.js"],"names":["useEffect","useState","Key","row1","row2","row3","Board","word","fetchWord","score","setScore","gameOver","setResetTimer","wrongGuesses","setWrongGuesses","correctGuesses","setCorrectGuesses","letterList","setletterList","clearKeys","setClearKeys","scoreDisplay","setScoreDisplay","previousWord","setPreviousWord","addScore","Math","abs","length","tempList","forEach","char","key","push","includes","charSet","Set","size","keyRow1","keyRow2","keyRow3","makeKeyBoardRow","row","keyRow","display"],"mappings":"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","sourcesContent":["import './Board.css';\nimport { useEffect, useState } from \"react\"\nimport Key from \"./Key.js\"\n\nconst row1 = \"qwertyuiop\";\nconst row2 = 'asdfghjkl';\nconst row3 = 'zxcvbnm';\n\nexport default function Board ({ word, fetchWord, score, setScore, gameOver, setResetTimer, wrongGuesses, setWrongGuesses}){\n\n\tconst [correctGuesses, setCorrectGuesses] = useState([])\n\t\n\tconst [letterList, setletterList] = useState ([])\n\tconst [clearKeys, setClearKeys] = useState(false)\n\tconst [scoreDisplay, setScoreDisplay] = useState(\"none\")\n\tconst [previousWord, setPreviousWord] = useState(\"\")\n\n\tconst addScore = (word) => {\n\t\tsetPreviousWord(word)\n\t\tsetScoreDisplay(\"block\")\n\t\tsetScore(score + (Math.abs(word.length - 5) * 100 + 500))\n\t\tsetResetTimer(true)\n\t\t// setTimeout(() => {\t\n\t\t// \tsetScoreDisplay(\"none\")\n\t\t// \tsetCorrectGuesses([])\n\t\t// \tsetWrongGuesses(0)\n\t\t// \tsetletterList([])  \n\t\t// \tfetchWord()\n\t\t// }, 1)\n    setScoreDisplay(\"none\")\n    setCorrectGuesses([])\n    setWrongGuesses(0)\n    setletterList([])  \n    fetchWord()\n\t}\n\t\n\tuseEffect(()=> {\n\t\tlet tempList = [];\n\t\t[...word].forEach((char, key) => {\n\t\t\ttempList.push(\n\t\t\t\t<div key={key} className = \"letterDiv\">\n\t\t\t\t\t{<p className=\"letter\">{correctGuesses.includes(char) && char}</p>}\n\t\t\t\t\t<p className=\"underline\"></p>\n\t\t\t\t</div>\n\t\t\t)\n\t\t})\n\t\tsetletterList(tempList)   \n\t\tconst charSet = new Set(word).size\n\t\tif (charSet === correctGuesses.length && charSet > 0) {\n\t\t\taddScore(word)\n\t\t\tsetClearKeys(true)\n\t\t\t\n\t\t} else {\n\t\t\tsetClearKeys(false)\n\t\t}\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [correctGuesses, word])\n\n\tuseEffect(()=>{\n\t\tsetCorrectGuesses([])\n\t\tsetWrongGuesses(0)\n\t\tsetletterList([]) \n\t}, [gameOver, setWrongGuesses])\n  \n\tvar keyRow1 = [];\n\tvar keyRow2 = [];\n\tvar keyRow3 = [];\n\n\tconst makeKeyBoardRow = (row, keyRow) => {\n\t\t[...row].forEach((char) => {\n\t\t\tkeyRow.push(\n\t\t\t\t<Key\n\t\t\t\t\tword={word}\n\t\t\t\t\tcorrectGuesses={correctGuesses} \n\t\t\t\t\tsetCorrectGuesses={setCorrectGuesses}\n          wrongGuesses={wrongGuesses}\n\t\t\t\t\tsetWrongGuesses={setWrongGuesses}\n\t\t\t\t\tclearKeys={clearKeys}\n\t\t\t\t\tgameOver={gameOver}\n\t\t\t\t\tkey={char} \n\t\t\t\t\tchar={char}\n\t\t\t\t/>\n\t\t\t)\n\t\t})\n\t}\n\n\tmakeKeyBoardRow(row1, keyRow1)\n\tmakeKeyBoardRow(row2, keyRow2)\n\tmakeKeyBoardRow(row3, keyRow3)\n\t\t\n\treturn(\n\t\t<>\n\t\t<div className = \"board\">\n\t\t\t<div className = \"word\">\n\t\t\t\t{letterList}\n\t\t\t</div>\n\t\t</div>\n\t\t <div className = \"keyboard\" >\n\t\t\t<div className = \"keyRow\">\n\t\t\t\t{keyRow1}\n\t\t\t</div>\n\t\t\t<div className = \"keyRow\">\n\t\t\t\t{keyRow2}\n\t\t\t</div>\n\t\t\t<div className = \"keyRow\">\n\t\t\t\t{keyRow3}\n\t\t\t</div>\n\t\t</div>\n\t\t<div className=\"scoreAlert\" style={{display: scoreDisplay}}> \n\t\t\t<h3>{previousWord} + {(Math.abs(previousWord.length - 5) * 100 + 500)}</h3>\n\t\t</div>\n\t\t</>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}