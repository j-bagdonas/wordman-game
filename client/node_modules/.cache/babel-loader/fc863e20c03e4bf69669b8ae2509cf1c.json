{"ast":null,"code":"var _jsxFileName = \"/Users/johnbagdonas/Development/Hangman/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport './App.css';\nimport Board from \"./components/Board.js\";\nimport GameOver from \"./components/GameOver\";\nimport Timer from \"./components/Timer.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [chances, setChances] = useState(5); //initial number of chances\n\n  const [word, setWord] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n\n  const fetchWord = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/');\n      const word = await response.json();\n      setWord(word);\n    } catch (err) {\n      console.log(err + \" Error fetching word from database.\");\n    }\n  };\n\n  const resetGame = () => {\n    setScore(0);\n    setGameOver(false);\n    fetchWord();\n  };\n\n  useEffect(() => {\n    fetchWord();\n  }, []); //initial word render\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        gameOver: gameOver,\n        setGameOver: setGameOver,\n        resetGame: resetGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      word: word,\n      score: score,\n      setScore: setScore,\n      fetchWord: fetchWord,\n      gameOver: gameOver\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameOver, {\n      score: score,\n      resetGame: resetGame,\n      gameOver: gameOver\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RDFxAaKY6w+GH3jNtP988F4MqDA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/johnbagdonas/Development/Hangman/client/src/App.js"],"names":["useState","useEffect","Board","GameOver","Timer","App","chances","setChances","word","setWord","score","setScore","gameOver","setGameOver","fetchWord","response","fetch","json","err","console","log","resetGame"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,CAAD,CAAtC,CAFa,CAE6B;;AAC1C,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMc,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAD,CAA5B;AACA,YAAMR,IAAI,GAAG,MAAMO,QAAQ,CAACE,IAAT,EAAnB;AACAR,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAJD,CAIE,OAAOU,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,GAAG,qCAAlB;AACD;AACF,GARD;;AAUA,QAAMG,SAAS,GAAG,MAAM;AACtBV,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAC,IAAAA,SAAS;AACV,GAJD;;AAMAb,EAAAA,SAAS,CAAC,MAAM;AAACa,IAAAA,SAAS;AAAI,GAArB,EAAuB,EAAvB,CAAT,CAvBa,CAuBwB;;AAErC,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA,8BACE;AAAA,8BAAYJ,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,KAAD;AACE,QAAA,QAAQ,EAAEE,QADZ;AAEE,QAAA,WAAW,EAAEC,WAFf;AAGE,QAAA,SAAS,EAAEQ;AAHb;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,KAAD;AACE,MAAA,IAAI,EAAEb,IADR;AAEE,MAAA,KAAK,EAAEE,KAFT;AAGE,MAAA,QAAQ,EAAEC,QAHZ;AAIA,MAAA,SAAS,EAAEG,SAJX;AAKE,MAAA,QAAQ,EAAEF;AALZ;AAAA;AAAA;AAAA;AAAA,YAVF,eAiBE,QAAC,QAAD;AACE,MAAA,KAAK,EAAEF,KADT;AAEE,MAAA,SAAS,EAAEW,SAFb;AAGE,MAAA,QAAQ,EAAET;AAHZ;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAlDQP,G;;KAAAA,G;AAoDT,eAAeA,GAAf","sourcesContent":["import {useState, useEffect} from \"react\"\nimport './App.css';\nimport Board from \"./components/Board.js\"\nimport GameOver from \"./components/GameOver\";\nimport Timer from \"./components/Timer.js\"\n\n\n\nfunction App() {\n\n  const [chances, setChances] = useState(5) //initial number of chances\n  const [word, setWord] = useState(\"\")\n  const [score, setScore] = useState(0)\n  const [gameOver, setGameOver] = useState(false)\n\n  const fetchWord = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/')\n      const word = await response.json()\n      setWord(word)\n    } catch (err) {\n      console.log(err + \" Error fetching word from database.\")\n    }\n  }\n\n  const resetGame = () => {\n    setScore(0)\n    setGameOver(false)\n    fetchWord()\n  }\n\n  useEffect(() => {fetchWord();}, [])  //initial word render\n\n  return (\n    <div className=\"main\">\n      <div className = \"info\">\n        <h4>Score: {score}</h4>\n        {/* <h4>Time remaining:{timeRemaing} seconds</h4> */}\n        <Timer\n          gameOver={gameOver} \n          setGameOver={setGameOver}\n          resetGame={resetGame}\n        />\n      </div>\n      <Board \n        word={word}\n        score={score}\n        setScore={setScore}\n\t\t    fetchWord={fetchWord}\n        gameOver={gameOver}\n      />\n      <GameOver\n        score={score}\n        resetGame={resetGame}\n        gameOver={gameOver}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}