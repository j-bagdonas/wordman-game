{"ast":null,"code":"var _jsxFileName = \"/Users/johnbagdonas/Development/Hangman/client/src/components/Timer.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timer(props) {\n  _s();\n\n  const [timeRemaining, setTimeRemaining] = useState(5);\n  useEffect(() => {\n    if (timeRemaining > 0 && !props.gameOver) {\n      setTimeout(() => {\n        setTimeRemaining(prevTimeRemaining => prevTimeRemaining - 1);\n      }, 1000);\n    } else {\n      props.setGameOver(true);\n      setTimeRemaining(60);\n    }\n  }, [timeRemaining]);\n  return /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: [\"Time remaining: \", timeRemaining]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Timer, \"vyJmqrsbdxkvlykNrH/wVEGUF50=\");\n\n_c = Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/johnbagdonas/Development/Hangman/client/src/components/Timer.js"],"names":["useState","useEffect","Timer","props","timeRemaining","setTimeRemaining","gameOver","setTimeout","prevTimeRemaining","setGameOver"],"mappings":";;;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,eAAe,SAASC,KAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAElC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,CAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAK;AAGX,QAAGG,aAAa,GAAG,CAAhB,IAAqB,CAACD,KAAK,CAACG,QAA/B,EAAwC;AACpCC,MAAAA,UAAU,CAAC,MAAM;AACbF,QAAAA,gBAAgB,CAACG,iBAAiB,IAAIA,iBAAiB,GAAG,CAA1C,CAAhB;AACH,OAFS,EAEP,IAFO,CAAV;AAGH,KAJD,MAIO;AACHL,MAAAA,KAAK,CAACM,WAAN,CAAkB,IAAlB;AACAJ,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACH;AACJ,GAXQ,EAWN,CAACD,aAAD,CAXM,CAAT;AAaA,sBACI;AAAA,mCAAqBA,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GApBuBF,K;;KAAAA,K","sourcesContent":["\nimport { useState, useEffect } from \"react\"\n\nexport default function Timer (props) {\n    \n    const [timeRemaining, setTimeRemaining] = useState(5)\n\n    useEffect(()=> {\n        \n\n        if(timeRemaining > 0 && !props.gameOver){\n            setTimeout(() => {\n                setTimeRemaining(prevTimeRemaining => prevTimeRemaining - 1)\n            }, 1000);\n        } else {\n            props.setGameOver(true)\n            setTimeRemaining(60)\n        }\n    }, [timeRemaining])\n\n    return (\n        <h4>Time remaining: {timeRemaining}</h4>\n    )\n}"]},"metadata":{},"sourceType":"module"}