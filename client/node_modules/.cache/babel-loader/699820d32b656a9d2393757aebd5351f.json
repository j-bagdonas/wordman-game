{"ast":null,"code":"var _jsxFileName = \"/Users/johnbagdonas/Development/Hangman/client/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport './Board.css';\nimport HangDude from './HangDude.js';\nimport { useEffect, useState } from \"react\";\nimport Key from \"./Key.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst row1 = \"qwertyuiop\";\nconst row2 = 'asdfghjkl';\nconst row3 = 'zxcvbnm';\nexport default function Board(_ref) {\n  _s();\n\n  let {\n    word,\n    fetchWord\n  } = _ref;\n  const [correctGuesses, setCorrectGuesses] = useState([]);\n  const [letterList, setletterList] = useState([]);\n  const [clearKeys, setClearKeys] = useState(false);\n  useEffect(() => {\n    let tempList = [];\n    [...word].forEach(char => {\n      tempList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"letterDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"letter\",\n          children: correctGuesses.includes(char) && char\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"underline\",\n          children: \"_____\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this));\n    });\n    setletterList(tempList);\n    const charSet = new Set(word).size;\n\n    if (charSet === correctGuesses.length) {\n      setTimeout(() => {\n        setCorrectGuesses([]);\n        setletterList([]);\n        fetchWord();\n        setClearKeys(true);\n      }, 3000);\n    } else {\n      setClearKeys(false);\n    }\n  }, [correctGuesses, word]); // useEffect(() => {\n  // }, [correctGuesses, word])\n\n  var keyRow1 = [];\n  var keyRow2 = [];\n  var keyRow3 = [];\n\n  const makeKeyBoardRow = (row, keyRow) => {\n    [...row].forEach(char => {\n      keyRow.push( /*#__PURE__*/_jsxDEV(Key, {\n        word: word,\n        correctGuesses: correctGuesses,\n        setCorrectGuesses: setCorrectGuesses,\n        clearKeys: clearKeys,\n        char: char\n      }, char, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this));\n    });\n  };\n\n  makeKeyBoardRow(row1, keyRow1);\n  makeKeyBoardRow(row2, keyRow2);\n  makeKeyBoardRow(row3, keyRow3);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word\",\n        children: letterList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(HangDude, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keyRow\",\n        children: keyRow1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keyRow\",\n        children: keyRow2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keyRow\",\n        children: keyRow3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Board, \"EFqwisY5CZh2H9bPPEYKZj2RSZk=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/johnbagdonas/Development/Hangman/client/src/components/Board.js"],"names":["HangDude","useEffect","useState","Key","row1","row2","row3","Board","word","fetchWord","correctGuesses","setCorrectGuesses","letterList","setletterList","clearKeys","setClearKeys","tempList","forEach","char","push","includes","charSet","Set","size","length","setTimeout","keyRow1","keyRow2","keyRow3","makeKeyBoardRow","row","keyRow"],"mappings":"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","sourcesContent":["import './Board.css';\nimport HangDude from './HangDude.js';\nimport { useEffect, useState } from \"react\"\nimport Key from \"./Key.js\"\n\nconst row1 = \"qwertyuiop\";\nconst row2 = 'asdfghjkl';\nconst row3 = 'zxcvbnm';\n\n\nexport default function Board ({ word, fetchWord }){\n\n\tconst [correctGuesses, setCorrectGuesses] = useState([])\n\tconst [letterList, setletterList] = useState ([])\n\tconst [clearKeys, setClearKeys] = useState(false)\n\n\tuseEffect(()=> {\n\t\tlet tempList = [];\n\t\t[...word].forEach((char) => {\n\t\t\ttempList.push(\n\t\t\t\t<div className = \"letterDiv\">\n\t\t\t\t\t{<p className=\"letter\">{correctGuesses.includes(char) && char}</p>}\n\t\t\t\t\t<p className=\"underline\">_____</p>\n\t\t\t\t</div>\n\t\t\t)\n\t\t})\n\t\tsetletterList(tempList)   \n\t\tconst charSet = new Set(word).size\n\n\t\tif (charSet === correctGuesses.length) {\n\t\t\tsetTimeout(()=>{\n\t\t\t\tsetCorrectGuesses([])\n\t\t\t\tsetletterList([])\n\t\t\t\tfetchWord()\n\t\t\t\tsetClearKeys(true)\n\t\t\t}, 3000)\n\t\t\t\n\t\t} else {\n\t\t\tsetClearKeys(false)\n\t\t}\n\t\t\n\t\n\t\t\n\t}, [correctGuesses, word])\n\n\t// useEffect(() => {\n\n\n\t// }, [correctGuesses, word])\n\n\n\n\tvar keyRow1 = [];\n\tvar keyRow2 = [];\n\tvar keyRow3 = [];\n\n\tconst makeKeyBoardRow = (row, keyRow) => {\n\t\t[...row].forEach((char) => {\n\t\t\tkeyRow.push(\n\t\t\t\t<Key\n\t\t\t\t\tword={word}\n\t\t\t\t\tcorrectGuesses={correctGuesses} \n\t\t\t\t\tsetCorrectGuesses={setCorrectGuesses}\n\t\t\t\t\tclearKeys={clearKeys}\n\t\t\t\t\tkey={char} \n\t\t\t\t\tchar={char}\n\t\t\t\t/>\n\t\t\t)\n\t\t})\n\t}\n\n\tmakeKeyBoardRow(row1, keyRow1)\n\tmakeKeyBoardRow(row2, keyRow2)\n\tmakeKeyBoardRow(row3, keyRow3)\n\t\t\n\treturn(\n\t\t<>\n\t\t<div className = \"board\">\n\t\t\t<div className = \"word\">\n\t\t\t\t{letterList}\n\t\t\t</div>\n\t\t\t<HangDude />\n\t\t</div>\n\t\t <div className = \"keyboard\">\n\t\t\t<div className = \"keyRow\">\n\t\t\t\t{keyRow1}\n\t\t\t</div>\n\t\t\t<div className = \"keyRow\">\n\t\t\t\t{keyRow2}\n\t\t\t</div>\n\t\t\t<div className = \"keyRow\">\n\t\t\t\t{keyRow3}\n\t\t\t</div>\n\t\t</div>\n\t\t</>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}