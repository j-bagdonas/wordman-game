{"ast":null,"code":"var _jsxFileName = \"/Users/johnbagdonas/Development/WordMan/client/src/components/GameOver.js\",\n    _s = $RefreshSig$();\n\nimport \"./GameOver.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GameOver(_ref) {\n  _s();\n\n  let {\n    score,\n    resetGame,\n    gameOver,\n    word\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [initGame, setInitGame] = useState(true);\n  const [scoreSaved, setScoreSaved] = useState(false);\n  const [saveError, setSaveError] = useState(\"\");\n\n  const postScore = async () => {\n    if (name === \"\") {\n      setSaveError(\"Please enter your name\");\n      return;\n    }\n\n    checkUsername(name);\n    const data = {\n      name: name,\n      score: score\n    };\n    const response = await fetch('http://192.168.1.179:5000/addScore', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n\n    if (response.status === 200) {\n      setScoreSaved(true);\n    } else {\n      setSaveError(\"Server Error.\");\n    }\n  };\n\n  const checkUsername = async name => {\n    const response = await fetch(`https://www.purgomalum.com/service/containsprofanity?text=${name}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(name)\n    });\n\n    if (response === true) {\n      console.log(true);\n    } else {\n      console.log(false);\n    }\n  };\n\n  const handleChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleStartGame = () => {\n    resetGame();\n    setInitGame(false);\n  };\n\n  const handlePlayAgain = () => {\n    resetGame();\n    setScoreSaved(false);\n    setSaveError(\"\");\n    setName(\"\");\n  };\n\n  if (initGame) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameInit\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Welcome to \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"WordMan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Guess the correct word to up your score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You have 60 seconds or 9 letter guesses for each word. Good Luck!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStartGame,\n          children: \"Start Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameOverAlert\",\n        style: {\n          display: gameOver ? \"block\" : \"none\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Game Over!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Score \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"The word was \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: [\"'\", word, \"'\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), scoreSaved && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Score added to leaderboard!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 28\n        }, this), !scoreSaved && saveError && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: saveError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 42\n        }, this), !scoreSaved && /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          placeholder: \"username\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this), !scoreSaved && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: postScore,\n          children: \"Add to leaderboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePlayAgain,\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\n\n_s(GameOver, \"b8gzVjDiRduhtVbUAtcU8Q3cnOw=\");\n\n_c = GameOver;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameOver\");","map":{"version":3,"sources":["/Users/johnbagdonas/Development/WordMan/client/src/components/GameOver.js"],"names":["useState","GameOver","score","resetGame","gameOver","word","name","setName","initGame","setInitGame","scoreSaved","setScoreSaved","saveError","setSaveError","postScore","checkUsername","data","response","fetch","method","headers","body","JSON","stringify","status","console","log","handleChange","event","target","value","handleStartGame","handlePlayAgain","display"],"mappings":"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","sourcesContent":["import \"./GameOver.css\"\nimport { useState } from \"react\"\n\n\nexport default function GameOver ({ score, resetGame, gameOver, word}) {\n\n  const [name, setName] = useState(\"\")\n  const [initGame, setInitGame] = useState(true)\n  const [scoreSaved, setScoreSaved] = useState(false)\n  const [saveError, setSaveError] = useState(\"\")\n\n  const postScore = async () => {\n\n    if(name === \"\") {\n      setSaveError(\"Please enter your name\")\n      return\n    }\n\n    checkUsername(name);\n\n    const data = {\n      name : name,\n      score : score\n    }\n  \n    const response = await fetch('http://192.168.1.179:5000/addScore', {\n      method : 'POST',\n      headers : {\n        'Content-Type' : 'application/json'\n      },\n      body : JSON.stringify(data)\n    })\n    \n    if(response.status === 200){\n      setScoreSaved(true)\n    } else {\n      setSaveError(\"Server Error.\")\n    }\n  }\n\n  const checkUsername = async (name) => {\n    const response = await fetch(`https://www.purgomalum.com/service/containsprofanity?text=${name}`, {\n      method : 'POST',\n      headers : {\n        'Content-Type' : 'application/json'\n      },\n      body : JSON.stringify(name)\n    })\n\n    if (response === true){\n      console.log(true)\n    } else{\n      console.log(false)\n    } \n  }\n\n  const handleChange = (event) => {\n    setName(event.target.value)\n  }\n\n  const handleStartGame = () => {\n    resetGame()\n    setInitGame(false)\n  }\n\n  const handlePlayAgain = () => {\n    resetGame()\n    setScoreSaved(false)\n    setSaveError(\"\")\n    setName(\"\")\n  }\n\n  if(initGame){\n    return (\n      <>\n        <div className = \"gameInit\">\n          <h2>Welcome to <i>WordMan</i></h2>\n          <p>Guess the correct word to up your score</p>\n          <p>You have 60 seconds or 9 letter guesses for each word. Good Luck!</p>\n          <button onClick={handleStartGame}>Start Game</button>\n        </div>\n      </>\n    )\n  } else {\n      return (\n        <>\n        <div className=\"gameOverAlert\" style={{display: gameOver ? \"block\" : \"none\"}}> \n            <h3>Game Over!</h3>\n            <h3>Score {score}</h3>\n            <h4>The word was <i>'{word}'</i></h4>\n            {scoreSaved && <p>Score added to leaderboard!</p>}\n            {!scoreSaved && saveError && <p>{saveError}</p>}\n            {!scoreSaved && <input onChange={handleChange} placeholder = \"username\" type = \"text\"></input>}\n            {!scoreSaved && <button onClick={postScore}>Add to leaderboard</button>}\n            <br></br>\n            <button onClick={handlePlayAgain}>Play Again</button>\n        </div> \n        </>\n      )\n  }\n\n} "]},"metadata":{},"sourceType":"module"}