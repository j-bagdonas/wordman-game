{"ast":null,"code":"var _jsxFileName = \"/Users/johnbagdonas/Development/Hangman/client/src/components/Leaderboard.js\",\n    _s = $RefreshSig$();\n\nimport \"./Leaderboard.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Leaderboard(_ref) {\n  _s();\n\n  let {\n    displayLeaderboard,\n    setDisplayLeaderboard\n  } = _ref;\n  const [scores, setScores] = useState();\n\n  const fetchScores = async () => {\n    const response = await fetch('http://192.168.1.179:5000/getScores');\n    const data = await response.json(); //const scoreItems = []\n    // data.slice(0,10).forEach(score => {\n    //     scoreItems.push(\n    //         <>\n    //         <tr key={score._id}>\n    //           <th>{score.name}</th>\n    //           <th>{score.score}</th>\n    //         </tr>                \n    //         </>\n    //     )\n    // });\n\n    const scoreItems = data.slice(0, 10).map((score, key) => {\n      /*#__PURE__*/\n      _jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: score.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: score.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    });\n    setScores(scoreItems);\n  };\n\n  const toggleLeaderboard = () => {\n    if (displayLeaderboard) {\n      setDisplayLeaderboard(false);\n    } else {\n      setDisplayLeaderboard(true);\n      fetchScores();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [displayLeaderboard && scores && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: scores\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleLeaderboard,\n        children: \"exit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 41\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleLeaderboard,\n        children: \"leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Leaderboard, \"wXdhQHbiXamZ+GXtWMK8E5DjK80=\");\n\n_c = Leaderboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"sources":["/Users/johnbagdonas/Development/Hangman/client/src/components/Leaderboard.js"],"names":["useState","Leaderboard","displayLeaderboard","setDisplayLeaderboard","scores","setScores","fetchScores","response","fetch","data","json","scoreItems","slice","map","score","key","name","toggleLeaderboard"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAGA,eAAe,SAASC,WAAT,OAAmE;AAAA;;AAAA,MAA7C;AAACC,IAAAA,kBAAD;AAAqBC,IAAAA;AAArB,GAA6C;AAG9E,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,EAApC;;AAIA,QAAMM,WAAW,GAAG,YAAY;AAC5B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB,CAF4B,CAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMC,UAAU,GAAGF,IAAI,CAACG,KAAL,CAAW,CAAX,EAAa,EAAb,EAAiBC,GAAjB,CAAqB,CAACC,KAAD,EAAQC,GAAR,KAAe;AACrD;AAAA;AAAA,+BACA;AAAA,kCACE;AAAA,sBAAKD,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKF,KAAK,CAACA;AAAX;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAASC,GAAT;AAAA;AAAA;AAAA;AAAA;AADA;AAOD,KARkB,CAAnB;AAUAV,IAAAA,SAAS,CAACM,UAAD,CAAT;AACH,GAzBD;;AA2BA,QAAMM,iBAAiB,GAAG,MAAM;AAC5B,QAAGf,kBAAH,EAAsB;AAClBC,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACH,KAFD,MAEO;AACHA,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAG,MAAAA,WAAW;AACd;AACJ,GAPD;;AASA,sBACI;AAAA,eACAJ,kBAAkB,IAAIE,MAAtB,iBAAgC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BAChC;AAAA,gCACI;AAAA,iCACE;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAA,oBACGA;AADH;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADgC,eAY5B;AAAQ,QAAA,OAAO,EAAIa,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZ4B;AAAA;AAAA;AAAA;AAAA;AAAA,YADhC,eAgBA;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAIA,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAhBA;AAAA,kBADJ;AAwBH;;GAnEuBhB,W;;KAAAA,W","sourcesContent":["import \"./Leaderboard.css\"\nimport { useState } from \"react\";\n\n\nexport default function Leaderboard ({displayLeaderboard, setDisplayLeaderboard}) {\n    \n    \n    const [scores, setScores] = useState()\n    \n    \n \n    const fetchScores = async () => {\n        const response = await fetch('http://192.168.1.179:5000/getScores')\n        const data = await response.json()\n        //const scoreItems = []\n        // data.slice(0,10).forEach(score => {\n        //     scoreItems.push(\n        //         <>\n        //         <tr key={score._id}>\n        //           <th>{score.name}</th>\n        //           <th>{score.score}</th>\n        //         </tr>                \n        //         </>\n        //     )\n        // });\n        const scoreItems = data.slice(0,10).map((score, key) =>{\n          <>\n          <tr key={key}>\n            <td>{score.name}</td>\n            <td>{score.score}</td> \n          </tr>\n          </>\n          \n        })\n        \n        setScores(scoreItems)\n    }\n\n    const toggleLeaderboard = () => {\n        if(displayLeaderboard){\n            setDisplayLeaderboard(false)\n        } else {\n            setDisplayLeaderboard(true)\n            fetchScores()\n        }\n    }\n\n    return (\n        <>\n       {displayLeaderboard && scores && <div className=\"leaderboard\" > \n        <table>\n            <thead>\n              <tr>\n                  <th>Name</th>\n                  <th>Score</th>\n              </tr>\n            </thead>\n            <tbody>\n              {scores}\n            </tbody>\n        </table>\n            <button onClick = {toggleLeaderboard}>exit</button>\n        </div> }\n        \n        <div>\n            <button onClick = {toggleLeaderboard}>leaderboard</button>  \n        </div>\n        </>\n    )\n\n\n}"]},"metadata":{},"sourceType":"module"}