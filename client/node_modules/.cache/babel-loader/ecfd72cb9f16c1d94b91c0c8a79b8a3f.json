{"ast":null,"code":"var _jsxFileName = \"/Users/johnbagdonas/Development/Hangman/client/src/components/Leaderboard.js\",\n    _s = $RefreshSig$();\n\nimport \"./Leaderboard.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Leaderboard() {\n  _s();\n\n  const [displayLeaderboard, setDisplayLeaderboard] = useState(false);\n  const [scores, setScores] = useState();\n\n  const fetchScores = async () => {\n    const response = await fetch('http://localhost:5000/getScores');\n    const data = await response.json();\n    setScores(data.map(score => {\n      /*#__PURE__*/\n      _jsxDEV(\"li\", {\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this);\n    }));\n    console.log(scores);\n  };\n\n  const toggleLeaderboard = () => {\n    if (displayLeaderboard) {\n      setDisplayLeaderboard(false);\n    } else {\n      setDisplayLeaderboard(true);\n      fetchScores();\n    }\n  }; // const fetchWord = async () => {\n  //     try {\n  //       const response = await fetch('http://localhost:5000/')\n  //       const word = await response.json()\n  //       setWord(word)\n  //     } catch (err) {\n  //       console.log(err + \" Error fetching word from database.\")\n  //     }\n  //   }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [displayLeaderboard && scores && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleLeaderboard,\n        children: \"exit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 41\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleLeaderboard,\n        children: \"leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Leaderboard, \"LRxWxerzQjU2/dnGw4oIVjxsUSE=\");\n\n_c = Leaderboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"sources":["/Users/johnbagdonas/Development/Hangman/client/src/components/Leaderboard.js"],"names":["useState","Leaderboard","displayLeaderboard","setDisplayLeaderboard","scores","setScores","fetchScores","response","fetch","data","json","map","score","console","log","toggleLeaderboard"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAGA,eAAe,SAASC,WAAT,GAAwB;AAAA;;AAEnC,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CH,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,EAApC;;AAIA,QAAMM,WAAW,GAAG,YAAY;AAC5B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAL,IAAAA,SAAS,CACLI,IAAI,CAACE,GAAL,CAAUC,KAAD,IAAU;AACf;AAAA;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AACH,KAFD,CADK,CAAT;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACH,GATD;;AAWA,QAAMW,iBAAiB,GAAG,MAAM;AAC5B,QAAGb,kBAAH,EAAsB;AAClBC,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACH,KAFD,MAEO;AACHA,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAG,MAAAA,WAAW;AACd;AACJ,GAPD,CAlBmC,CA2BnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI;AAAA,eACAJ,kBAAkB,IAAIE,MAAtB,iBAAgC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BAChC;AAAA;AAAA;AAAA;AAAA,cADgC,eAK5B;AAAQ,QAAA,OAAO,EAAIW,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAL4B;AAAA;AAAA;AAAA;AAAA;AAAA,YADhC,eASA;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAIA,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATA;AAAA,kBADJ;AAiBH;;GAtDuBd,W;;KAAAA,W","sourcesContent":["import \"./Leaderboard.css\"\nimport { useState } from \"react\";\n\n\nexport default function Leaderboard () {\n    \n    const [displayLeaderboard, setDisplayLeaderboard] = useState(false)\n    const [scores, setScores] = useState()\n\n\n \n    const fetchScores = async () => {\n        const response = await fetch('http://localhost:5000/getScores')\n        const data = await response.json()\n        setScores (\n            data.map((score) =>{\n                <li>{score}</li>\n            })\n        )\n        console.log(scores)\n    }\n\n    const toggleLeaderboard = () => {\n        if(displayLeaderboard){\n            setDisplayLeaderboard(false)\n        } else {\n            setDisplayLeaderboard(true)\n            fetchScores()\n        }\n    }\n\n    // const fetchWord = async () => {\n    //     try {\n    //       const response = await fetch('http://localhost:5000/')\n    //       const word = await response.json()\n    //       setWord(word)\n    //     } catch (err) {\n    //       console.log(err + \" Error fetching word from database.\")\n    //     }\n    //   }\n\n    return (\n        <>\n       {displayLeaderboard && scores && <div className=\"leaderboard\" > \n        <ul>\n            \n        </ul>\n            \n            <button onClick = {toggleLeaderboard}>exit</button>\n        </div> }\n        \n        <div>\n            <button onClick = {toggleLeaderboard}>leaderboard</button>  \n        </div>\n        </>\n    )\n\n\n}"]},"metadata":{},"sourceType":"module"}