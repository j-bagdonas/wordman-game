{"ast":null,"code":"var _jsxFileName = \"/Users/johnbagdonas/Development/Hangman/client/src/components/Leaderboard.js\",\n    _s = $RefreshSig$();\n\nimport \"./Leaderboard.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Leaderboard() {\n  _s();\n\n  const [displayLeaderboard, setDisplayLeaderboard] = useState(false);\n  const [scores, setScores] = useState();\n\n  const fetchScores = async () => {\n    const response = await fetch('http://localhost:5000/getScores');\n    const data = await response.json();\n    const scoreItems = data.map(score => {\n      /*#__PURE__*/\n      _jsxDEV(\"li\", {\n        children: score.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this);\n    });\n    setScores(scoreItems);\n    console.log(data);\n  };\n\n  const toggleLeaderboard = () => {\n    if (displayLeaderboard) {\n      setDisplayLeaderboard(false);\n    } else {\n      setDisplayLeaderboard(true);\n      fetchScores();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [displayLeaderboard && scores && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: scoreItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleLeaderboard,\n        children: \"exit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 41\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleLeaderboard,\n        children: \"leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Leaderboard, \"LRxWxerzQjU2/dnGw4oIVjxsUSE=\");\n\n_c = Leaderboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"sources":["/Users/johnbagdonas/Development/Hangman/client/src/components/Leaderboard.js"],"names":["useState","Leaderboard","displayLeaderboard","setDisplayLeaderboard","scores","setScores","fetchScores","response","fetch","data","json","scoreItems","map","score","name","console","log","toggleLeaderboard"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAGA,eAAe,SAASC,WAAT,GAAwB;AAAA;;AAEnC,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CH,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,EAApC;;AAIA,QAAMM,WAAW,GAAG,YAAY;AAC5B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,UAAMC,UAAU,GAAGF,IAAI,CAACG,GAAL,CAAUC,KAAD,IAAW;AACnC;AAAA;AAAA,kBAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA;AACH,KAFkB,CAAnB;AAIAT,IAAAA,SAAS,CAACM,UAAD,CAAT;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACH,GAVD;;AAYA,QAAMQ,iBAAiB,GAAG,MAAM;AAC5B,QAAGf,kBAAH,EAAsB;AAClBC,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACH,KAFD,MAEO;AACHA,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAG,MAAAA,WAAW;AACd;AACJ,GAPD;;AASA,sBACI;AAAA,eACAJ,kBAAkB,IAAIE,MAAtB,iBAAgC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BAChC;AAAA,kBACKO;AADL;AAAA;AAAA;AAAA;AAAA,cADgC,eAK5B;AAAQ,QAAA,OAAO,EAAIM,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAL4B;AAAA;AAAA;AAAA;AAAA;AAAA,YADhC,eASA;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAIA,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATA;AAAA,kBADJ;AAiBH;;GA7CuBhB,W;;KAAAA,W","sourcesContent":["import \"./Leaderboard.css\"\nimport { useState } from \"react\";\n\n\nexport default function Leaderboard () {\n    \n    const [displayLeaderboard, setDisplayLeaderboard] = useState(false)\n    const [scores, setScores] = useState()\n    \n    \n \n    const fetchScores = async () => {\n        const response = await fetch('http://localhost:5000/getScores')\n        const data = await response.json()\n        const scoreItems = data.map((score) => {\n            <li>{score.name}</li>\n        })\n\n        setScores(scoreItems)\n        \n        console.log(data)\n    }\n\n    const toggleLeaderboard = () => {\n        if(displayLeaderboard){\n            setDisplayLeaderboard(false)\n        } else {\n            setDisplayLeaderboard(true)\n            fetchScores()\n        }\n    }\n\n    return (\n        <>\n       {displayLeaderboard && scores && <div className=\"leaderboard\" > \n        <ul>\n            {scoreItems}\n        </ul>\n            \n            <button onClick = {toggleLeaderboard}>exit</button>\n        </div> }\n        \n        <div>\n            <button onClick = {toggleLeaderboard}>leaderboard</button>  \n        </div>\n        </>\n    )\n\n\n}"]},"metadata":{},"sourceType":"module"}