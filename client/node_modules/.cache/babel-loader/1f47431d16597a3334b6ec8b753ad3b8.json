{"ast":null,"code":"var _jsxFileName = \"/Users/johnbagdonas/Development/Hangman/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport './App.css';\nimport Board from \"./components/Board.js\";\nimport Timer from \"./components/Timer.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [chances, setChances] = useState(5); //initial number of chances\n\n  const [word, setWord] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [gameOverAlertDisplay, setGameOverAlertDisplay] = useState(\"none\");\n\n  const fetchWord = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/');\n      const word = await response.json();\n      setWord(word);\n    } catch (err) {\n      console.log(err + \" Error fetching word from database.\");\n    }\n  };\n\n  useEffect(() => {\n    fetchWord();\n  }, []); //initial word render\n\n  useEffect(() => {\n    if (gameOver) {\n      //show giant game over thing\n      setGameOverAlertDisplay(\"block\"); //enter score into scoreboard with name\n      //then set score 0 \n    }\n\n    setGameOver(false);\n  }, [gameOver]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        setGameOver: setGameOver,\n        gameOver: gameOver\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      word: word,\n      score: score,\n      setScore: setScore,\n      fetchWord: fetchWord\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameOverAlert\",\n      style: {\n        display: gameOverAlertDisplay\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Score \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"username\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add to leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wTLn23pO3YI1HVL2PDsabUpzVMw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/johnbagdonas/Development/Hangman/client/src/App.js"],"names":["useState","useEffect","Board","Timer","App","chances","setChances","word","setWord","score","setScore","gameOver","setGameOver","gameOverAlertDisplay","setGameOverAlertDisplay","fetchWord","response","fetch","json","err","console","log","display"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAD,CAAtC,CAFa,CAE6B;;AAC1C,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACa,oBAAD,EAAuBC,uBAAvB,IAAkDd,QAAQ,CAAC,MAAD,CAAhE;;AAGA,QAAMe,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAD,CAA5B;AACA,YAAMV,IAAI,GAAG,MAAMS,QAAQ,CAACE,IAAT,EAAnB;AACAV,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAJD,CAIE,OAAOY,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,GAAG,qCAAlB;AACD;AACF,GARD;;AAUAlB,EAAAA,SAAS,CAAC,MAAM;AAACc,IAAAA,SAAS;AAAI,GAArB,EAAuB,EAAvB,CAAT,CAnBa,CAmBwB;;AAErCd,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGU,QAAH,EAAY;AACV;AACAG,MAAAA,uBAAuB,CAAC,OAAD,CAAvB,CAFU,CAIV;AAEA;AACD;;AACDF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAVQ,EAUN,CAACD,QAAD,CAVM,CAAT;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA,8BACE;AAAA,8BAAYF,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,KAAD;AACE,QAAA,WAAW,EAAEG,WADf;AAEE,QAAA,QAAQ,EAAED;AAFZ;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,KAAD;AACE,MAAA,IAAI,EAAEJ,IADR;AAEE,MAAA,KAAK,EAAEE,KAFT;AAGE,MAAA,QAAQ,EAAEC,QAHZ;AAIA,MAAA,SAAS,EAAEK;AAJX;AAAA;AAAA;AAAA;AAAA,YATF,eAeE;AAAK,MAAA,SAAS,EAAC,eAAf;AAA8B,MAAA,KAAK,EAAE;AAACO,QAAAA,OAAO,EAAET;AAAV,OAArC;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,6BAAWJ,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAO,QAAA,WAAW,EAAG,UAArB;AAAgC,QAAA,IAAI,EAAG;AAAvC;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,eAKA;AAAA;AAAA;AAAA;AAAA,cALA,eAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAhEQL,G;;KAAAA,G;AAkET,eAAeA,GAAf","sourcesContent":["import {useState, useEffect} from \"react\"\nimport './App.css';\nimport Board from \"./components/Board.js\"\nimport Timer from \"./components/Timer.js\"\n\n\n\nfunction App() {\n\n  const [chances, setChances] = useState(5) //initial number of chances\n  const [word, setWord] = useState(\"\")\n  const [score, setScore] = useState(0)\n  const [gameOver, setGameOver] = useState(false)\n  const [gameOverAlertDisplay, setGameOverAlertDisplay] = useState(\"none\")\n\n \n  const fetchWord = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/')\n      const word = await response.json()\n      setWord(word)\n    } catch (err) {\n      console.log(err + \" Error fetching word from database.\")\n    }\n  }\n\n  useEffect(() => {fetchWord();}, [])  //initial word render\n\n  useEffect(()=>{\n    if(gameOver){\n      //show giant game over thing\n      setGameOverAlertDisplay(\"block\")\n\n      //enter score into scoreboard with name\n\n      //then set score 0 \n    }\n    setGameOver(false)\n  }, [gameOver])\n\n  \n\n\n  return (\n    <div className=\"main\">\n      <div className = \"info\">\n        <h4>Score: {score}</h4>\n        {/* <h4>Time remaining:{timeRemaing} seconds</h4> */}\n        <Timer\n          setGameOver={setGameOver}\n          gameOver={gameOver}  \n        />\n      </div>\n      <Board \n        word={word}\n        score={score}\n        setScore={setScore}\n\t\t    fetchWord={fetchWord}\n      />\n      <div className=\"gameOverAlert\"style={{display: gameOverAlertDisplay}}> \n      <h3>Game Over!</h3>\n      <h3>Score {score}</h3>\n      <input placeholder = \"username\" type = \"text\"></input>\n      <button >Add to leaderboard</button>\n      <br></br>\n      <button >Play Again</button>\n\n     </div>\n      {/* {gameOver && <EnterScore/>} */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}