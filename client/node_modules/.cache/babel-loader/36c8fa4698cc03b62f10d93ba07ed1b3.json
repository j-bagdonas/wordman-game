{"ast":null,"code":"var _jsxFileName = \"/Users/johnbagdonas/Development/WordMan/client/src/components/WordMan3d.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WordManHead(props) {\n  _s();\n\n  // This reference will give us direct access to the mesh\n  const mesh = useRef(); // Set up state for the hovered and active state\n\n  const [hovered, setHover] = useState(false);\n  const [active, setActive] = useState(false); // Subscribe this component to the render-loop, rotate the mesh every frame\n\n  useFrame((state, delta) => mesh.current.rotation.y += 0.01); // Return view, these are regular three.js elements expressed in JSX\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: mesh,\n    scale: active ? 1.5 : 1,\n    onClick: event => setActive(!active),\n    onPointerOver: event => setHover(true),\n    onPointerOut: event => setHover(false),\n    children: [/*#__PURE__*/_jsxDEV(\"capsuleGeometry\", {\n      args: [1, 32, 16]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshToonMaterial\", {\n      color: hovered ? 'hotpink' : 'orange'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WordManHead, \"Gf95ovYMxCkb+HRFcD1+zMTFs6g=\", false, function () {\n  return [useFrame];\n});\n\n_c = WordManHead;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordManHead\");","map":{"version":3,"sources":["/Users/johnbagdonas/Development/WordMan/client/src/components/WordMan3d.js"],"names":["useRef","useState","useFrame","WordManHead","props","mesh","hovered","setHover","active","setActive","state","delta","current","rotation","y","event"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,eAAe,SAASC,WAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC1C;AACA,QAAMC,IAAI,GAAGL,MAAM,EAAnB,CAF0C,CAG1C;;AACA,QAAM,CAACM,OAAD,EAAUC,QAAV,IAAsBN,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC,CAL0C,CAM1C;;AACAC,EAAAA,QAAQ,CAAC,CAACQ,KAAD,EAAQC,KAAR,KAAkBN,IAAI,CAACO,OAAL,CAAaC,QAAb,CAAsBC,CAAtB,IAA2B,IAA9C,CAAR,CAP0C,CAQ1C;;AACA,sBACE,qBACMV,KADN;AAEE,IAAA,GAAG,EAAEC,IAFP;AAGE,IAAA,KAAK,EAAEG,MAAM,GAAG,GAAH,GAAS,CAHxB;AAIE,IAAA,OAAO,EAAGO,KAAD,IAAWN,SAAS,CAAC,CAACD,MAAF,CAJ/B;AAKE,IAAA,aAAa,EAAGO,KAAD,IAAWR,QAAQ,CAAC,IAAD,CALpC;AAME,IAAA,YAAY,EAAGQ,KAAD,IAAWR,QAAQ,CAAC,KAAD,CANnC;AAAA,4BAOE;AAAiB,MAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR;AAAvB;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAkB,MAAA,KAAK,EAAED,OAAO,GAAG,SAAH,GAAe;AAA/C;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAtBuBH,W;UAOtBD,Q;;;KAPsBC,W","sourcesContent":["import { useRef, useState } from 'react'\nimport { useFrame } from '@react-three/fiber'\n\nexport default function WordManHead (props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef()\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false)\n  const [active, setActive] = useState(false)\n  // Subscribe this component to the render-loop, rotate the mesh every frame\n  useFrame((state, delta) => mesh.current.rotation.y += 0.01)\n  // Return view, these are regular three.js elements expressed in JSX\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={active ? 1.5 : 1}\n      onClick={(event) => setActive(!active)}\n      onPointerOver={(event) => setHover(true)}\n      onPointerOut={(event) => setHover(false)}>\n      <capsuleGeometry args={[1, 32, 16]} />\n      <meshToonMaterial color={hovered ? 'hotpink' : 'orange'} />\n\n    </mesh>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}