{"ast":null,"code":"var _jsxFileName = \"/Users/johnbagdonas/Development/Hangman/client/src/components/Timer.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timer(_ref) {\n  _s();\n\n  let {\n    gameOver,\n    setGameOver,\n    correctWord,\n    setCorrectWord\n  } = _ref;\n  const [timeRemaining, setTimeRemaining] = useState(60);\n  useEffect(() => {\n    if (correctWord) {\n      setTimeRemaining(60);\n      setCorrectWord(false);\n    }\n\n    if (timeRemaining > 0 && !gameOver) {\n      setTimeout(() => {\n        setTimeRemaining(prevTimeRemaining => prevTimeRemaining - 1);\n      }, 1000);\n    } else {\n      setGameOver(true);\n      setTimeRemaining(60);\n    }\n  }, [timeRemaining, gameOver, setGameOver, correctWord, setCorrectWord]);\n  return /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: [\"Time remaining: \", timeRemaining]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Timer, \"KOaj/nzWcT0gL8/f1089zECa9D0=\");\n\n_c = Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/johnbagdonas/Development/Hangman/client/src/components/Timer.js"],"names":["useState","useEffect","Timer","gameOver","setGameOver","correctWord","setCorrectWord","timeRemaining","setTimeRemaining","setTimeout","prevTimeRemaining"],"mappings":";;;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,eAAe,SAASC,KAAT,OAAyE;AAAA;;AAAA,MAAzD;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,WAAZ;AAA0BC,IAAAA,WAA1B;AAAuCC,IAAAA;AAAvC,GAAyD;AAEpF,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;AAKAC,EAAAA,SAAS,CAAC,MAAK;AAEX,QAAGI,WAAH,EAAe;AACXG,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAF,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH;;AAED,QAAGC,aAAa,GAAG,CAAhB,IAAqB,CAACJ,QAAzB,EAAkC;AAC9BM,MAAAA,UAAU,CAAC,MAAM;AACbD,QAAAA,gBAAgB,CAACE,iBAAiB,IAAIA,iBAAiB,GAAG,CAA1C,CAAhB;AACH,OAFS,EAEP,IAFO,CAAV;AAGH,KAJD,MAIO;AACHN,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAI,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACH;AACJ,GAfQ,EAeN,CAACD,aAAD,EAAgBJ,QAAhB,EAA0BC,WAA1B,EAAuCC,WAAvC,EAAoDC,cAApD,CAfM,CAAT;AAmBA,sBACI;AAAA,mCAAqBC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GA7BuBL,K;;KAAAA,K","sourcesContent":["\nimport { useState, useEffect } from \"react\"\n\nexport default function Timer ({ gameOver, setGameOver , correctWord, setCorrectWord }) {\n    \n    const [timeRemaining, setTimeRemaining] = useState(60)\n\n\n \n\n    useEffect(()=> {\n\n        if(correctWord){\n            setTimeRemaining(60)\n            setCorrectWord(false)\n        }\n\n        if(timeRemaining > 0 && !gameOver){\n            setTimeout(() => {\n                setTimeRemaining(prevTimeRemaining => prevTimeRemaining - 1)\n            }, 1000); \n        } else {\n            setGameOver(true)\n            setTimeRemaining(60)\n        }\n    }, [timeRemaining, gameOver, setGameOver, correctWord ,setCorrectWord])\n\n    \n\n    return (\n        <h4>Time remaining: {timeRemaining}</h4>\n    )\n}"]},"metadata":{},"sourceType":"module"}