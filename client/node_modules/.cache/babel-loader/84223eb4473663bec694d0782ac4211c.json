{"ast":null,"code":"var _jsxFileName = \"/Users/johnbagdonas/Development/Hangman/client/src/components/GameOver.js\",\n    _s = $RefreshSig$();\n\nimport \"./GameOver.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GameOver(_ref) {\n  _s();\n\n  let {\n    score,\n    resetGame,\n    gameOver\n  } = _ref;\n  const [name, setName] = useState(\"\");\n\n  const postScore = async () => {\n    const data = {\n      name: name,\n      score: score\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: \"hello  its me\"\n    };\n    const response = await fetch('http://localhost:5000/addScore', requestOptions);\n  };\n\n  const handleChange = event => {\n    setName(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameOverAlert\",\n      style: {\n        display: gameOver ? \"block\" : \"none\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Score \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        placeholder: \"username\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: postScore,\n        children: \"Add to leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(GameOver, \"gFPpQ6rgfiGkmgRsh4q2nIO1W+Q=\");\n\n_c = GameOver;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameOver\");","map":{"version":3,"sources":["/Users/johnbagdonas/Development/Hangman/client/src/components/GameOver.js"],"names":["useState","GameOver","score","resetGame","gameOver","name","setName","postScore","data","requestOptions","method","headers","body","response","fetch","handleChange","event","target","value","display"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAGA,eAAe,SAASC,QAAT,OAAkD;AAAA;;AAAA,MAA/B;AAAEC,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBC,IAAAA;AAApB,GAA+B;AAE/D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMO,SAAS,GAAG,YAAY;AAC5B,UAAMC,IAAI,GAAG;AACXH,MAAAA,IAAI,EAAGA,IADI;AAEXH,MAAAA,KAAK,EAAGA;AAFG,KAAb;AAIA,UAAMO,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAG,MADY;AAErBC,MAAAA,OAAO,EAAG;AACR,wBAAiB;AADT,OAFW;AAKrBC,MAAAA,IAAI,EAAG;AALc,KAAvB;AAOA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmCL,cAAnC,CAA5B;AACD,GAbD;;AAcA,QAAMM,YAAY,GAAIC,KAAD,IAAW;AAC9BV,IAAAA,OAAO,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAFD;;AAIA,sBACE;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAEf,QAAQ,GAAG,OAAH,GAAa;AAA/B,OAAtC;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,6BAAWF,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,QAAQ,EAAEa,YAAjB;AAA+B,QAAA,WAAW,EAAG,UAA7C;AAAwD,QAAA,IAAI,EAAG;AAA/D;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,OAAO,EAAER,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,QAAA,OAAO,EAAEJ,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAYD;;GAlCuBF,Q;;KAAAA,Q","sourcesContent":["import \"./GameOver.css\"\nimport { useState } from \"react\"\n\n\nexport default function GameOver ({ score, resetGame, gameOver}) {\n\n  const [name, setName] = useState(\"\")\n\n  const postScore = async () => {\n    const data = {\n      name : name,\n      score : score\n    }\n    const requestOptions = {\n      method : 'POST',\n      headers : {\n        'Content-Type' : 'application/json'\n      },\n      body : \"hello  its me\"\n    }\n    const response = await fetch('http://localhost:5000/addScore', requestOptions)\n  }\n  const handleChange = (event) => {\n    setName(event.target.value)\n  }\n\n  return (\n    <>\n    <div className=\"gameOverAlert\" style={{display: gameOver ? \"block\" : \"none\"}}> \n        <h3>Game Over!</h3>\n        <h3>Score {score}</h3>\n        <input onChange={handleChange} placeholder = \"username\" type = \"text\"></input>\n        <button onClick={postScore}>Add to leaderboard</button>\n        <br></br>\n        <button onClick={resetGame}>Play Again</button>\n    </div> \n    </>\n  )\n} "]},"metadata":{},"sourceType":"module"}