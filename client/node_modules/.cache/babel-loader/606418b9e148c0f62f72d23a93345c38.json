{"ast":null,"code":"var _jsxFileName = \"/Users/johnbagdonas/Development/Hangman/client/src/components/GameOver.js\",\n    _s = $RefreshSig$();\n\nimport \"./GameOver.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GameOver(_ref) {\n  _s();\n\n  let {\n    score,\n    resetGame,\n    gameOver\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [initGame, setInitGame] = useState(true);\n\n  const postScore = async () => {\n    const data = {\n      name: name,\n      score: score\n    };\n    const response = await fetch('http://localhost:5000/addScore', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    const res = await response.json();\n  };\n\n  const handleChange = event => {\n    setName(event.target.value);\n  };\n\n  if (initGame) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameInit\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to WordMan 3000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetGame,\n          children: \"Start Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"View Leaderboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameOverAlert\",\n        style: {\n          display: gameOver ? \"block\" : \"none\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Game Over!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Score \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          placeholder: \"username\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: postScore,\n          children: \"Add to leaderboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetGame,\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\n\n_s(GameOver, \"nY3m2Trv66OqsSeGaGUbyBdhbBk=\");\n\n_c = GameOver;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameOver\");","map":{"version":3,"sources":["/Users/johnbagdonas/Development/Hangman/client/src/components/GameOver.js"],"names":["useState","GameOver","score","resetGame","gameOver","name","setName","initGame","setInitGame","postScore","data","response","fetch","method","headers","body","JSON","stringify","res","json","handleChange","event","target","value","display"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAGA,eAAe,SAASC,QAAT,OAAkD;AAAA;;AAAA,MAA/B;AAAEC,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBC,IAAAA;AAApB,GAA+B;AAE/D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMS,SAAS,GAAG,YAAY;AAC5B,UAAMC,IAAI,GAAG;AACXL,MAAAA,IAAI,EAAGA,IADI;AAEXH,MAAAA,KAAK,EAAGA;AAFG,KAAb;AAKA,UAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AAC7DC,MAAAA,MAAM,EAAG,MADoD;AAE7DC,MAAAA,OAAO,EAAG;AACR,wBAAiB;AADT,OAFmD;AAK7DC,MAAAA,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAeP,IAAf;AALsD,KAAnC,CAA5B;AAOA,UAAMQ,GAAG,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAlB;AACD,GAdD;;AAeA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9Bf,IAAAA,OAAO,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAFD;;AAIA,MAAGhB,QAAH,EAAY;AACV,wBACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAG,UAAjB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAEJ,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AASD,GAVD,MAUO;AACH,wBACE;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,KAAK,EAAE;AAACqB,UAAAA,OAAO,EAAEpB,QAAQ,GAAG,OAAH,GAAa;AAA/B,SAAtC;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,+BAAWF,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAO,UAAA,QAAQ,EAAEkB,YAAjB;AAA+B,UAAA,WAAW,EAAG,UAA7C;AAAwD,UAAA,IAAI,EAAG;AAA/D;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAQ,UAAA,OAAO,EAAEX,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAQ,UAAA,OAAO,EAAEN,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBADF;AAYH;AAEF;;GAjDuBF,Q;;KAAAA,Q","sourcesContent":["import \"./GameOver.css\"\nimport { useState } from \"react\"\n\n\nexport default function GameOver ({ score, resetGame, gameOver}) {\n\n  const [name, setName] = useState(\"\")\n  const [initGame, setInitGame] = useState(true)\n\n  const postScore = async () => {\n    const data = {\n      name : name,\n      score : score\n    }\n  \n    const response = await fetch('http://localhost:5000/addScore', {\n      method : 'POST',\n      headers : {\n        'Content-Type' : 'application/json'\n      },\n      body : JSON.stringify(data)\n    })\n    const res = await response.json();\n  }\n  const handleChange = (event) => {\n    setName(event.target.value)\n  }\n\n  if(initGame){\n    return (\n      <>\n        <div className = \"gameInit\">\n          <h2>Welcome to WordMan 3000</h2>\n          <button onClick={resetGame}>Start Game</button>\n          <button>View Leaderboard</button>\n        </div>\n      </>\n    )\n  } else {\n      return (\n        <>\n        <div className=\"gameOverAlert\" style={{display: gameOver ? \"block\" : \"none\"}}> \n            <h3>Game Over!</h3>\n            <h3>Score {score}</h3>\n            <input onChange={handleChange} placeholder = \"username\" type = \"text\"></input>\n            <button onClick={postScore}>Add to leaderboard</button>\n            <br></br>\n            <button onClick={resetGame}>Play Again</button>\n        </div> \n        </>\n      )\n  }\n\n} "]},"metadata":{},"sourceType":"module"}